{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account.service.ts","webpack:///./src/app/animations.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nav-service.service.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/profile-edit/profile-edit.component.css","webpack:///./src/app/profile-edit/profile-edit.component.html","webpack:///./src/app/profile-edit/profile-edit.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Account } from './domain/models/account';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  account: Account = {\n\n    name: 'Addison Kimball',\n    email: 'addison@akimball.com',\n    password: 'password',\n    isCompany: false,\n    myCar: {\n\n        make: 'Honda',\n        model: 'Accord',\n        year: 2006,\n        submodel: '2.4L v6',\n        color: 'Black'\n\n    }\n\n  };\n\n  changeType(type:boolean) {\n\n    this.account.isCompany=!this.account.isCompany;\n\n  }\n\n}\n","import { trigger, transition, style, animateChild, animate, query, group } from '@angular/animations';\n\n\nexport const fadeAnimation =\n  trigger('routeAnimations', [\n    transition('* <=> profile', [\n      style({ position: 'relative' }),\n      query(':enter, :leave', [\n        style({\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%'\n        })\n      ]),\n      query(':enter', [\n        style({ opacity: 0 })\n      ]),\n      query(':leave', animateChild()),\n      group([\n        query(':leave', [\n          animate('150ms', style({ opacity: 0}))\n        ]),\n        query(':enter', [\n          animate('150ms', style({ opacity: 1}))\n        ])\n      ]),\n      query(':enter', animateChild()),\n    ])\n  ]);\n","import { LoginComponent } from './login/login.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileEditComponent } from './profile-edit/profile-edit.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent},\n  { path: 'home', component: HomeComponent},\n  { path: 'profile', data: {animation: 'profile'},\n      children: [\n        {path: '', component: ProfileComponent},\n        {path: 'edit', component: ProfileEditComponent}\n      ]\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)] ,\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n\\n\\n\\n\\n<div [@routeAnimations]=\\\"prepareRoute(outlet)\\\" >\\n    <router-outlet #outlet=\\\"outlet\\\"></router-outlet>\\n</div>\\n\"","import { NavServiceService } from './nav-service.service';\nimport { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { fadeAnimation } from './animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  animations: [\n    fadeAnimation\n  ]\n})\nexport class AppComponent {\n  title = 'GiveMeABrake';\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\n  }\n\n  constructor(public navServiceService:NavServiceService) {\n  }\n}\n","import { NavServiceService } from './nav-service.service';\nimport { AccountService } from './account.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RouterOutlet } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ProfileEditComponent } from './profile-edit/profile-edit.component';\n\n\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      ProfileComponent,\n      HomeComponent,\n      LoginComponent,\n      NavbarComponent,\n      ProfileEditComponent\n   ],\n   imports: [\n      BrowserModule,\n      FormsModule,\n      AppRoutingModule,\n      BrowserAnimationsModule\n   ],\n   providers: [\n      AccountService,\n      NavServiceService\n   ],\n   bootstrap: [\n      AppComponent,\n      HomeComponent\n   ]\n})\nexport class AppModule {\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\n  }\n\n}\n\n\n","module.exports = \".btn{\\n  margin:1em;\\n}\\n\\nh4{\\n  margin-left:1em;\\n}\\n\\n.alert{\\n  margin:1em;\\n}\\n\\n/*\\n#main{\\n  background-color: gray;\\n} */\\n\"","module.exports = \"<div id=\\\"main\\\">\\n<h4 *ngIf=\\\"!accountService.account.isCompany\\\">Welcome! Driver {{ accountService.account.name }}</h4>\\n<h4 *ngIf=\\\"accountService.account.isCompany\\\">Welcome! Shop Owner {{ accountService.account.name }}</h4>\\n\\n<br>\\n<div *ngIf=\\\"!accountService.account.isCompany\\\">\\n<div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\">\\n  Last time you got oil changed was <strong>5pm Tuesday</strong>\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<button class = \\\"btn btn-info\\\" id=\\\"station\\\">See nearest gas stations</button>\\n<button class = \\\"btn btn-success\\\" id=\\\"dealership\\\">Find dealership</button>\\n<button class = \\\"btn btn-primary\\\" id=\\\"oil\\\">See price change</button>\\n</div>\\n\\n<div *ngIf=\\\"accountService.account.isCompany\\\">\\n  <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\">\\n    There will be a customer come in through at <strong>5pm.</strong>\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <button class = \\\"btn btn-info\\\" id=\\\"check\\\">Check other gas stations</button>\\n  <button class = \\\"btn btn-success\\\" id=\\\"deal\\\">Upload deals</button>\\n  <button class = \\\"btn btn-primary\\\" id=\\\"notify\\\">Notify my deals</button>\\n  </div>\\n  </div>\\n\"","import { NavServiceService } from './../nav-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AccountService } from './../account.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor(public accountService:AccountService, public navServiceService:NavServiceService) {\n  }\n\n  ngOnInit() {\n    this.navServiceService.show();\n  }\n\n}\n","module.exports = \"#owner,#driver{\\n  margin:1em;\\n}\\n.center{\\n  height:100%;\\n  width:100%;\\n  vertical-align: middle;\\n  text-align: center;\\n  top:0;\\n  left:0;\\n  right:0;\\n\\n}\\n\"","module.exports = \"<div class=\\\"center\\\">\\n  <a [routerLink]=\\\"['/home']\\\" (click)=\\\"setValue(0); navServiceService.show()\\\"><button class = \\\"btn btn-primary\\\" id=\\\"driver\\\">Login As Driver</button></a>\\n  <a [routerLink]=\\\"['/home']\\\" (click)=\\\"setValue(1); navServiceService.show()\\\"><button class = \\\"btn btn-primary\\\" id= \\\"owner\\\">Login As Store Owner</button></a>\\n</div>\\n\\n\"","import { NavServiceService } from './../nav-service.service';\nimport { AccountService } from './../account.service';\nimport { Component, OnInit } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  constructor(public accountService:AccountService, public navServiceService:NavServiceService) {\n  }\n\n  ngOnInit() {\n    this.navServiceService.hide();\n  }\n\n  setValue(value:number) {\n    this.accountService.account.typeofaccount=value;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavServiceService {\n  visible: boolean;\nconstructor() {\n  this.visible=false;\n}\n\n  hide() {\n    this.visible=false;\n  }\n  show() {\n    this.visible=true;\n  }\n}\n","module.exports = \".navbar-nav{\\n  width:100%;\\n}\\n\"","module.exports = \"<div class=\\\"navbar navbar-light bg-light mb-4 navbar-expand-lg\\\">\\n  <div class=\\\"navbar navbar-nav\\\">\\n\\n      <a [routerLink]=\\\"[ '\\\\home' ]\\\" routerLinkActive=\\\"active\\\" class=\\\"h4 nav-link mt-auto mb-auto\\\">Give Me a Brake!</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo02\\\" aria-controls=\\\"navbarTogglerDemo02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo02\\\">\\n          <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"[ 'profile' ]\\\">Profile</a>\\n            </li>\\n          </ul>\\n        </div>\\n\\n      <a [routerLink]=\\\"['']\\\"><button class = \\\"btn btn-dark float-right\\\" id=\\\"driver\\\">Log Out</button></a>\\n\\n\\n\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NavServiceService } from './../nav-service.service';\nimport { AccountService } from './../account.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  constructor(public accountService:AccountService, public navServiceService:NavServiceService) {\n  }\n\n  ngOnInit() {\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n          <div class=\\\"card\\\">\\n              <div class=\\\"h5 card-header\\\">\\n              Profile\\n              <button class='btn btn-success float-right' [routerLink]=\\\"[ '/profile' ]\\\">\\n                Done\\n              </button>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"account_name\\\">\\n                      <b *ngIf='accountService.account.isCompany == false'>Name: </b>\\n                      <b *ngIf='accountService.account.isCompany == true'>Company Name: </b>\\n\\n                    </label>\\n                    <input type=\\\"text\\\" id=\\\"account_name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"accountService.account.name\\\"/>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"account_email\\\">\\n                          <b>Email: </b>\\n                      </label>\\n                      <input type=\\\"email\\\" id=\\\"account_email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"accountService.account.email\\\"/>\\n                  </div>\\n                  <div class='form-group'>\\n                    <b>Password</b>\\n                    <button id='passwordBtn' class='btn btn-danger ml-3'>Edit</button>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"employeeCheck\\\">\\n                        <b>Are you a Business? </b>\\n                      </label>\\n                      <input class=\\\"form-check ml-1\\\" name=\\\"employed\\\" type=\\\"checkbox\\\" id=\\\"employeeCheck\\\" [(ngModel)]=\\\"accountService.account.isCompany\\\">\\n                  </div>\\n                  <div class=\\\"form-group\\\" *ngIf='!accountService.account.isCompany'>\\n                      <label for=\\\"dept_form\\\">\\n                        <b>My Car: </b>\\n                      </label>\\n                      <table class='card'>\\n                        <th class='card-header'>{{accountService.account.myCar.year}} {{accountService.account.myCar.make}} {{accountService.account.myCar.model}}</th>\\n                        <div class='card-body'>\\n\\n\\n                        </div>\\n\\n                      </table>\\n                    </div>\\n\\n\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from './../account.service';\n\n\n@Component({\n  selector: 'app-profile-edit',\n  templateUrl: './profile-edit.component.html',\n  styleUrls: ['./profile-edit.component.css']\n})\nexport class ProfileEditComponent implements OnInit {\n\n  constructor(public accountService:AccountService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"h5 card-header\\\">\\n                Profile\\n                <button class='btn btn-dark float-right' [routerLink]=\\\"[ '\\\\edit' ]\\\">\\n                  Edit Profile\\n                </button>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"account_name\\\">\\n                        <b *ngIf='accountService.account.isCompany == false'>Name: </b>\\n                        <b *ngIf='accountService.account.isCompany == true'>Company Name: </b>\\n\\n                      </label>\\n                      <input type=\\\"text\\\" id=\\\"account_name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"accountService.account.name\\\" style=\\\"pointer-events: none;\\\"/>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"account_email\\\">\\n                            <b>Email: </b>\\n                        </label>\\n                        <input type=\\\"email\\\" id=\\\"account_email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"accountService.account.email\\\" style=\\\"pointer-events: none;\\\"/>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"employeeCheck\\\">\\n                          <b>Are you a Business? </b>\\n                        </label>\\n                        <input class=\\\"form-check ml-1\\\" name=\\\"employed\\\" type=\\\"checkbox\\\" id=\\\"employeeCheck\\\" [(ngModel)]=\\\"accountService.account.isCompany\\\" disabled>\\n                    </div>\\n                    <div class=\\\"form-group\\\" *ngIf='!accountService.account.isCompany'>\\n                        <label for=\\\"dept_form\\\">\\n                          <b>My Car: </b>\\n                        </label>\\n                        <table class='card'>\\n                          <th class='card-header'>{{accountService.account.myCar.year}} {{accountService.account.myCar.make}} {{accountService.account.myCar.model}}</th>\\n                          <div class='card-body'>\\n\\n\\n                          </div>\\n\\n                        </table>\\n                      </div>\\n\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from './../account.service';\nimport { RouterOutlet } from '@angular/router';\n\n\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n\n})\n\n\n\n\nexport class ProfileComponent implements OnInit {\n  ngOnInit(): void {\n\n  }\n\n  constructor(public accountService:AccountService) {\n\n\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}